---
name: Build Node API

on:
  workflow_call:
    inputs:
      app_dir:
        type: string
        required: true
        description: 'Directorio de la app (raíz del package.json)'
      node_version:
        type: string
        required: false
        description: 'Versión Node fallback si no hay .nvmrc (ej: "20.x")'
      run_lint:
        type: boolean
        default: true
      run_test:
        type: boolean
        default: true
      run_build:
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Preferimos .nvmrc si existe; si no, usamos inputs.node_version o 20.x
      - name: Setup Node (prefer .nvmrc; fallback to input/default)
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ hashFiles(format('{0}/.nvmrc', inputs.app_dir)) != '' && format('{0}/.nvmrc', inputs.app_dir) || '' }}
          node-version: ${{ hashFiles(format('{0}/.nvmrc', inputs.app_dir)) == '' && (inputs.node_version || '20.x') || '' }}
          cache: npm
          cache-dependency-path: ${{ inputs.app_dir }}/package-lock.json

      - name: NPM CI
        working-directory: ${{ inputs.app_dir }}
        run: npm ci

      - name: Lint
        if: ${{ inputs.run_lint }}
        working-directory: ${{ inputs.app_dir }}
        run: npm run lint --if-present

      - name: Test
        if: ${{ inputs.run_test }}
        working-directory: ${{ inputs.app_dir }}
        run: npm test --if-present -- --ci

      - name: Build
        if: ${{ inputs.run_build }}
        working-directory: ${{ inputs.app_dir }}
        run: npm run build --if-present

      - name: Summary
        if: always()
        shell: bash
        run: |
          {
            echo "## Node build summary"
            echo
            echo "- **Node**: $(node -v)"
            echo "- **NPM**:  $(npm -v)"
            echo "- **Dir**:  \`${{ inputs.app_dir }}\`"
            echo "- **Lint**: ${{ inputs.run_lint }}"
            echo "- **Test**: ${{ inputs.run_test }}"
            echo "- **Build**: ${{ inputs.run_build }}"
          } >> "$GITHUB_STEP_SUMMARY"
