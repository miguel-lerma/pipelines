---
name: Build & Test (Node + React)

on:
  workflow_call:
    inputs:
      app_dir:
        required: true
        type: string

permissions:
  contents: read

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.app_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect lockfile
        id: lock
        shell: bash
        run: |
          set -euo pipefail
          APP_DIR="${{ inputs.app_dir }}"
          manager="npm"
          has_lock="false"
          lock_path=""

          if [ -f "$APP_DIR/package-lock.json" ]; then
            manager="npm";  has_lock="true"; lock_path="$APP_DIR/package-lock.json"
          elif [ -f "$APP_DIR/pnpm-lock.yaml" ]; then
            manager="pnpm"; has_lock="true"; lock_path="$APP_DIR/pnpm-lock.yaml"
          elif [ -f "$APP_DIR/yarn.lock" ]; then
            manager="yarn"; has_lock="true"; lock_path="$APP_DIR/yarn.lock"
          fi

          {
            echo "manager=$manager"
            echo "has_lock=$has_lock"
            echo "lock_path=$lock_path"
          } >> "$GITHUB_OUTPUT"

      # Con cache solo si hay lockfile de npm
      - name: Setup Node (con cache)
        if: steps.lock.outputs.has_lock == 'true' && steps.lock.outputs.manager == 'npm'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ${{ steps.lock.outputs.lock_path }}

      - name: Setup Node (sin cache)
        if: steps.lock.outputs.has_lock != 'true' || steps.lock.outputs.manager != 'npm'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar deps
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test --if-present -- --ci --watch=false

      - name: Build
        run: npm run build --if-present

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-reports
          path: |
            **/jest-junit*.xml
            **/test-results/**/*.xml
          if-no-files-found: ignore
