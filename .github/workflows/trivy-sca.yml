---
name: Trivy SCA

'on':
  workflow_call:
    inputs:
      app_dir:
        required: false
        type: string
        default: "."
      severity:
        required: false
        type: string
        default: "HIGH,CRITICAL"
      ignore_unfixed:
        required: false
        type: string
        default: "true"
      fail_on_findings:
        required: false
        type: string
        default: "true"

jobs:
  trivy:
    name: Trivy SCA (deps)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    env:
      APP_DIR: ${{ inputs.app_dir }}
      SEVERITY: ${{ inputs.severity }}
      IGNORE_UNFIXED: ${{ inputs.ignore_unfixed }}
      FAIL_ON_FINDINGS: ${{ inputs.fail_on_findings }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Trivy
        uses: aquasecurity/trivy-action@0.28.0

      # 1) Genera SARIF para Code Scanning
      - name: Trivy SARIF
        run: |
          trivy fs "$APP_DIR" \
            --scanners vuln \
            --format sarif \
            --output trivy.sarif \
            --severity "$SEVERITY" \
            --ignore-unfixed=$IGNORE_UNFIXED \
            --exit-code 0
      - name: Upload SARIF
        if: hashFiles('trivy.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

      # 2) Corre en JSON para contar hallazgos y producir Summary
      - name: Trivy JSON (for summary)
        run: |
          trivy fs "$APP_DIR" \
            --scanners vuln \
            --format json \
            --output trivy.json \
            --severity "$SEVERITY" \
            --ignore-unfixed=$IGNORE_UNFIXED \
            --exit-code 0

      - name: Build Job Summary
        run: |
          if [ -f trivy.json ]; then
            TOTAL=$(jq '[.Results[]?.Vulnerabilities[]?] | length' trivy.json 2>/dev/null || echo 0)
            H=$(jq '[.Results[]?.Vulnerabilities[]?|select(.Severity=="HIGH")] | length' trivy.json 2>/dev/null || echo 0)
            C=$(jq '[.Results[]?.Vulnerabilities[]?|select(.Severity=="CRITICAL")] | length' trivy.json 2>/dev/null || echo 0)
          else
            TOTAL=0; H=0; C=0
          fi

          STATUS="üü¢ Sin hallazgos en $SEVERITY"
          [ "$TOTAL" -gt 0 ] && STATUS="üü† $TOTAL hallazgos ($SEVERITY)"
          [ "$C" -gt 0 ] && STATUS="üî¥ $TOTAL hallazgos ($SEVERITY)"

          {
            echo "## üîç Trivy SCA (Dependencies)"
            echo ""
            echo "- **Severidades**: \`$SEVERITY\`  ‚Ä¢  **Ignore unfixed**: \`$IGNORE_UNFIXED\`"
            echo ""
            echo "| Estado | Total | HIGH | CRITICAL |"
            echo "|:--:|--:|--:|--:|"
            echo "| $STATUS | $TOTAL | $H | $C |"
            echo ""
            echo "> Reporte SARIF subido a **Code scanning alerts** (pesta√±a *Security*)."
          } >> "$GITHUB_STEP_SUMMARY"

          if [ "$FAIL_ON_FINDINGS" = "true" ] && [ "$TOTAL" -gt 0 ]; then
            echo "Se configur√≥ fail_on_findings=true y hay hallazgos ($TOTAL)."
            exit 1
          fi
