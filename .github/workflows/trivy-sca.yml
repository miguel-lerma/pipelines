---
name: Trivy SCA

'on':
  workflow_call:
    inputs:
      app_dir:
        type: string
        required: false
        default: "."
      severity:
        type: string
        required: false
        default: "HIGH,CRITICAL"
      ignore_unfixed:
        type: string
        required: false
        default: "true"
      fail_on_findings:
        type: string
        required: false
        default: "true"

permissions:
  contents: read
  security-events: write

jobs:
  sca:
    name: Trivy SCA
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # === Tu paso original (deja el SARIF como ya lo ten√≠as) ===
      - name: Trivy FS scan (SARIF)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          scanners: vuln
          format: sarif
          output: trivy.sarif
          working-directory: "${{ inputs.app_dir }}"
          severity: "${{ inputs.severity }}"
          ignore-unfixed: "${{ inputs.ignore_unfixed }}"

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

      # === Setup de Trivy CLI para generar JSON y armar el Summary ===
      - name: Setup Trivy (CLI only)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          setup-only: true

      - name: Trivy JSON (for summary)
        working-directory: ${{ inputs.app_dir }}
        run: |
          trivy fs . \
            --scanners vuln \
            --format json \
            --output ../trivy.json \
            --severity "${{ inputs.severity }}" \
            --ignore-unfixed=${{ inputs.ignore_unfixed }} \
            --exit-code 0

      - name: Build Job Summary
        run: |
          if [ -f trivy.json ]; then
            TOTAL=$(jq '[.Results[]?.Vulnerabilities[]?] | length' trivy.json 2>/dev/null || echo 0)
            H=$(jq '[.Results[]?.Vulnerabilities[]?|select(.Severity=="HIGH")] | length' trivy.json 2>/dev/null || echo 0)
            C=$(jq '[.Results[]?.Vulnerabilities[]?|select(.Severity=="CRITICAL")] | length' trivy.json 2>/dev/null || echo 0)
          else
            TOTAL=0; H=0; C=0
          fi

          STATUS="üü¢ Sin hallazgos en ${{ inputs.severity }}"
          if [ "$TOTAL" -gt 0 ]; then STATUS="üü† $TOTAL hallazgos (${{ inputs.severity }})"; fi
          if [ "$C" -gt 0 ]; then STATUS="üî¥ $TOTAL hallazgos (${{ inputs.severity }})"; fi

          {
            echo "## üîç Trivy SCA (Dependencies)"
            echo ""
            echo "- **Severidades**: \`${{ inputs.severity }}\`  ‚Ä¢  **Ignore unfixed**: \`${{ inputs.ignore_unfixed }}\`"
            echo ""
            echo "| Estado | Total | HIGH | CRITICAL |"
            echo "|:--:|--:|--:|--:|"
            echo "| $STATUS | $TOTAL | $H | $C |"
            echo ""
            echo "> El reporte SARIF fue subido a **Code scanning alerts** (pesta√±a *Security*)."
          } >> "$GITHUB_STEP_SUMMARY"

      # === Tu l√≥gica original para fallar el job (sin cambios) ===
      - name: Fail on findings
        if: ${{ inputs.fail_on_findings == 'true' }}
        run: |
          COUNT=$(jq '[.runs[].results] | map(length) | add' trivy.sarif)
          test "${COUNT:-0}" -eq 0
